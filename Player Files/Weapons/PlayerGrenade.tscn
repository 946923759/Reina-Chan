[gd_scene load_steps=13 format=2]

[ext_resource path="res://Player Files/Weapons/Grenade_Player.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

var smallExplosion = preload(\"res://Stages/EnemyExplodeSmall.tscn\")
onready var raycast = $RayCast2D

var velocity:Vector2

func _ready():
	set_physics_process(false)
	#init(-1)
	pass
	
func init(direction,velocityOverride:Vector2=Vector2(0,0)):
	$AnimatedSprite.playing=true
	if velocityOverride!=Vector2(0,0):
		velocity=velocityOverride
	else:
		velocity=Vector2(3*direction,-14)
	#print(velocity)
	set_physics_process(true)
	
func _physics_process(delta):
	#if raycast.is_colliding():
	#	print(\"Grenade collided obj!\")
	#	var obj = raycast.get_collider()
	#	enemy_touched(obj)
	var collision=move_and_collide(velocity)
	if collision:
		#print(\"Grenade collided obj!8\")
		var obj = collision.get_collider()
		enemy_touched(obj)
		
	velocity.y+=25*delta
	
# If bullet touched an enemy, the enemy hitbox will call this function.
# Why does the enemy need a hitbox? Because collision won't happen unless
# it's on the exact frame...
func enemy_touched(obj):
	enemy_touched_alt(obj,obj.get(\"is_reflecting\") == true)

#Because I clearly don't know what I'm doing
func enemy_touched_alt(obj,reflect):
	#If whatever called this function can get damaged by a bullet, damage it.
	#TODO: This doesn't account for damage types or effectiveness or whatever...
	if reflect:
		#reflected=true
		#print(String(OS.get_ticks_msec())+\" Bullet reflected!\")
		#reflectSound.play()
		if obj.has_method(\"add_collision_exception_with\"):
			obj.add_collision_exception_with(self)
		#movement = Vector2(movement.x*-1,-10)
		#move_and_collide(movement)
	else:
		if obj.has_method(\"damage\"):
			obj.call(\"damage\",1,10) #Type 10=grenade (0-indexed)
		killSelf()

func killSelf():
	var e = smallExplosion.instance()
	e.position = position
	get_parent().add_child(e)
	self.queue_free()


func _on_VisibilityNotifier2D_screen_exited():
	#print(\"grenade freed\")
	queue_free()
"

[sub_resource type="CircleShape2D" id=2]
radius = 20.0

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 1 )
region = Rect2( 13, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 1 )
region = Rect2( 26, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 1 )
region = Rect2( 39, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 1 )
region = Rect2( 52, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 1 )
region = Rect2( 65, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 1 )
region = Rect2( 78, 0, 13, 14 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 1 )
region = Rect2( 91, 0, 13, 14 )

[sub_resource type="SpriteFrames" id=11]
animations = [ {
"frames": [ SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ) ],
"loop": true,
"name": "default",
"speed": 20.0
} ]

[node name="KinematicBody2D" type="KinematicBody2D"]
position = Vector2( 1124.26, 559.248 )
z_index = 1
collision_layer = 8
collision_mask = 18
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )
__meta__ = {
"_edit_lock_": true
}

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
scale = Vector2( 4, 4 )
frames = SubResource( 11 )
playing = true
offset = Vector2( -0.5, -0.5 )
flip_h = true
__meta__ = {
"_edit_lock_": true
}

[node name="RayCast2D" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( 0, -35 )
collision_mask = 8
__meta__ = {
"_edit_lock_": true
}

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]

[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
