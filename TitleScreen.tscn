[gd_scene load_steps=22 format=2]

[ext_resource path="res://TitleBG.png" type="Texture" id=1]
[ext_resource path="res://Sounds/Menu - Choosing.WAV" type="AudioStream" id=2]
[ext_resource path="res://Sounds/Menu - Picked.WAV" type="AudioStream" id=3]
[ext_resource path="res://Hermes_TitleMenu.tres" type="DynamicFont" id=5]
[ext_resource path="res://TitleMenuItem.tscn" type="PackedScene" id=6]
[ext_resource path="res://ubuntu-font-family/Ubuntu-B.ttf" type="DynamicFontData" id=7]
[ext_resource path="res://ubuntu-font-family/Hermes-Regular.otf" type="DynamicFontData" id=8]
[ext_resource path="res://MM2Font.tres" type="DynamicFont" id=9]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var label
var list
var selection = 0

var inSubmenu
var currentSubmenu
var initialPos

onready var confirmSound = get_node(\"MMZConfirm\")
onready var selectSound = get_node(\"MMZSelect\")

const SELECTED_COLOR = Color(\"#007cff\");
const DESELECTED_COLOR = Color(1.0,1.0,1.0);

func highlightList(oldSelection, newSelection):
	#for i in range(list.get_child_count()):
		#if i != param:
			#list.get_child(i).set(\"custom_colors/font_color\", Color(.5,.5,.5,1));
		$Tween.interpolate_property(list.get_child(oldSelection), \"custom_colors/font_color\",
		SELECTED_COLOR, DESELECTED_COLOR, .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
		$Tween.start();
		#else:
		$Tween.interpolate_property(list.get_child(newSelection), \"custom_colors/font_color\",
		DESELECTED_COLOR, SELECTED_COLOR, .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
			#list.get_child(i).set(\"custom_colors/font_color\", Color(1,1,1,1));
		#self.get_node(\"Debug\").text = String(selection+1) + \"/\" + String(list.get_child_count());

func _ready():
	#label = self.get_node(\"Label\");
	list = self.get_node(\"ItemList\");
	initialPos = list.get_rect().position;
	#get_viewport().connect(\"size_changed\", self, \"on_window_resize\")
	highlightList(0,0);
	set_process_input(true);
	
	
#func on_window_resize():
#    # Change resolution to 640x360 pixels
#    get_viewport().set_rect(Rect2(0, 0, 1280, 720))

func _process(delta):
	# Called every frame. Delta is time since last frame.
	# Update game logic here.
	pass



func _input(event):
	if inSubmenu:
		currentSubmenu.input(event);
	else:
		if Input.is_action_just_pressed(\"ui_down\"):
			if selection < list.get_child_count() - 1:
				selectSound.play()
				selection = selection + 1;
				#Skip continue if there's no save file
				if selection == 1:
					selection = 2;
				highlightList(selection-1, selection);
				
		if Input.is_action_just_pressed(\"ui_up\"):
			if selection > 0:
				selectSound.play()
				selection = selection - 1;
				if selection == 1:
					selection = 0;
				highlightList(selection+1, selection);
				
		if Input.is_action_just_pressed(\"ui_select\"):
			#self.get_node(\"Debug\").text = list.get_child(selection).text;
			confirmSound.play()
			var sel = list.get_child(selection);
			if sel.hasSubmenu:
				currentSubmenu = get_node(sel.submenuNode);
				#currentSubmenu.selection = 0;
				#currentSubmenu.highlightList(currentSubmenu.selection);
				inSubmenu = true;
				tweenMainMenu();
			else:
				sel.action();

func tweenMainMenu():
	var tween = get_node(\"Tween\");
	tween.interpolate_property(list, 'rect_position:x',
	null, initialPos.x - 200, .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.interpolate_property(list, 'modulate',
	Color(1,1,1,1), Color(1,1,1,0), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.start();
	
	var tween2 = get_node(\"Tween2\");
	var subList = currentSubmenu;
	tween2.interpolate_property(subList, 'rect_position',
	#Reuse initialPos to make the second menu 200 to the right of the initialPos when it tweens in
	Vector2(initialPos.x + 200, initialPos.y),
	initialPos, #End on initialPos since that's where the first menu was before.
	.5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.interpolate_property(subList, 'modulate',
	Color(0,0,0,0), Color(1,1,1,1), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.start();
	subList.realInitPos = initialPos;
"

[sub_resource type="GDScript" id=2]
script/source = "extends AudioStreamPlayer

func _ready():
	pass"

[sub_resource type="GDScript" id=3]
script/source = "extends Label
export var hasSubmenu = true;
export(String) var submenuNode;

#func action():
#	get_tree().change_scene(\"res://BossSelect.tscn\");
"

[sub_resource type="GDScript" id=4]
script/source = "extends Label
export var enabled = true;
export var hasSubmenu = false

func action():
	pass
	
#func _ready():
#	if not enabled:
#		self.modulate = Color(.8,.8,.8)
"

[sub_resource type="GDScript" id=5]
script/source = "extends Label
export var hasSubmenu = true;
export(String) var submenuNode = \"OptionsSubmenu\"
"

[sub_resource type="GDScript" id=6]
script/source = "extends Label
export var hasSubmenu = false

func action():
	get_tree().change_scene(\"res://InitLogo.tscn\");
"

[sub_resource type="GDScript" id=7]
script/source = "extends Label
export var hasSubmenu = false

func action():
	get_tree().quit();
"

[sub_resource type="GDScript" id=8]
script/source = "extends Node2D

func _ready():
	#print(String(self.get_child_count()))
	for i in range(self.get_child_count()):
		#print(String(i))
		get_child(i).position = Vector2(100,i*80+350);
"

[sub_resource type="DynamicFont" id=9]
size = 50
font_data = ExtResource( 7 )

[sub_resource type="DynamicFont" id=10]
size = 200
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = ExtResource( 8 )

[sub_resource type="GDScript" id=11]
script/source = "extends GridContainer
var selection = 0;

var controllerTypes = [\"X360\", \"XB1\", \"Switch\", \"PS\"]

func highlightList(param):
	for i in range(self.get_child_count()):
		#Really horrible shitty way to only change odd elements
		if i%2 == 0:
			if i != param:
				self.get_child(i).set(\"custom_colors/font_color\", Color(.5,.5,.5,1));
			else:
				self.get_child(i).set(\"custom_colors/font_color\", Color(1,1,1,1));
	
	
	get_parent().get_node(\"Debug\").text = String(selection) + \"/\" + String(get_child_count()-1);

#Reused function from TitleScreen
func go_back():
	var tween = get_node(\"../Tween\");
	var list = self;
	var initialPos = list.get_rect().position;
	var finalPos = Vector2(initialPos.x + 200, initialPos.y);
	tween.interpolate_property(list, 'rect_position',
	initialPos, finalPos, .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.interpolate_property(list, 'modulate',
	Color(1,1,1,1), Color(1,1,1,0), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.start();
	
	
	var tween2 = get_node(\"../Tween2\");
	var parentList = get_node(\"../ItemList\");
	get_node(\"/root/TitleScreen\").inSubmenu = false;
	tween2.interpolate_property(parentList, 'rect_position',
	#Reuse initialPos to make the second menu 200 to the right of the initialPos when it tweens in
	Vector2(initialPos.x - 200, initialPos.y),
	initialPos, #End on initialPos since that's where the first menu was before.
	.5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.interpolate_property(parentList, 'modulate',
	Color(0,0,0,0), Color(1,1,1,1), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.start();

#what
var realInitPos;
func moveListUp():
	#print(String(realInitPos))
	var tween2 = get_node(\"../Tween2\");
	var subList = self
	tween2.interpolate_property(subList, 'rect_position',
	self.get_rect().position,
	Vector2(realInitPos.x, realInitPos.y-100), #move 100px up
	.5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.start();
	
func moveListDown():
	var tween2 = get_node(\"../Tween2\");
	var subList = self
	tween2.interpolate_property(subList, 'rect_position',
	self.get_rect().position,
	realInitPos, #move to original position
	.5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.start()

#not _input() because it's getting passed from the TitleScreen node's input handler.
func input(event):
	if Input.is_action_just_pressed(\"ui_down\"):
		if selection < self.get_child_count() - 2:
			selection = selection + 2;
			if selection == 6:
				moveListUp()
			get_node(\"../MMZSelect\").play()
			highlightList(selection);
			
	if Input.is_action_just_pressed(\"ui_up\"):
		if selection > 0:
			selection = selection - 2;
			if selection == 4:
				moveListDown()
			get_node(\"../MMZSelect\").play()
			highlightList(selection);
			
	if Input.is_action_just_pressed(\"ui_left\"):
		if selection == 0:
			if Globals.AudioVolume > 0:
				Globals.AudioVolume -= 10
				# Audio starts at -60db (silent) and ends at 0db (max).
				# So the 0~100 volume is scaled to 0~80 then subtracted by 80 to
				# determine what to put the volume level at.
				var realVolumeLevel = Globals.AudioVolume*.6-60
				if realVolumeLevel == -60:
					#instead of setting it to -80 just mute the bus to free up CPU
					AudioServer.set_bus_mute(0,true);
				else:
					AudioServer.set_bus_volume_db(0,realVolumeLevel)
					AudioServer.set_bus_mute(0,false)
				
				self.get_node(\"MusicVol Value\").text = String(Globals.AudioVolume)
		elif selection == 1:
			if Globals.SFXVolume > 0:
				Globals.SFXVolume -= 10;
		elif selection == 4:
			OS.set_window_fullscreen(false)
			get_node(\"Fullscreen Value\").text = \"NO\"
			#OS.window_size = Vector2(ProjectSettings.get_setting(\"display/window/Width\"),ProjectSettings.get_setting(\"display/window/Height\"))
			OS.window_size = Vector2(1280,720)
			OS.center_window()
	if Input.is_action_just_pressed(\"ui_right\"):
		if selection == 0:
			if Globals.AudioVolume < 100:
				Globals.AudioVolume += 10
				# Audio starts at -60db (silent) and ends at 0db (max).
				# So the 0~100 volume is scaled to 0~80 then subtracted by 80 to
				# determine what to put the volume level at.
				var realVolumeLevel = Globals.AudioVolume*.6-60
				if realVolumeLevel == -60:
					#instead of setting it to -80 just mute the bus to free up CPU
					AudioServer.set_bus_mute(0,true);
				else:
					AudioServer.set_bus_volume_db(0,realVolumeLevel)
					AudioServer.set_bus_mute(0,false)
				
				self.get_node(\"MusicVol Value\").text = String(Globals.AudioVolume)
		elif selection == 1:
			if Globals.SFXVolume < 100:
				Globals.SFXVolume += 10;
		elif selection == 4:
			OS.set_window_fullscreen(true)
			get_node(\"Fullscreen Value\").text = \"YES\"
			
	if Input.is_action_just_pressed(\"ui_cancel\"):
		go_back();


func _ready():
	highlightList(0);
"

[sub_resource type="GDScript" id=12]
script/source = "extends VBoxContainer
var selection = 2
var realInitPos;
#By now you're probably seeing a pattern of sorts...
func highlightList(param):
	for i in range(self.get_child_count()):
		if i != param:
			self.get_child(i).set(\"custom_colors/font_color\", Color(.5,.5,.5,1));
		else:
			self.get_child(i).set(\"custom_colors/font_color\", Color(1,1,1,1));

func _ready():
	highlightList(selection)
	
#Reused function from TitleScreen
func go_back():
	var tween = get_node(\"../Tween\");
	var list = self;
	var initialPos = list.get_rect().position;
	var finalPos = Vector2(initialPos.x + 200, initialPos.y);
	tween.interpolate_property(list, 'rect_position',
	initialPos, finalPos, .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.interpolate_property(list, 'modulate',
	Color(1,1,1,1), Color(1,1,1,0), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween.start();
	
	
	var tween2 = get_node(\"../Tween2\");
	var subList = get_node(\"../ItemList\");
	get_node(\"/root/TitleScreen\").inSubmenu = false;
	tween2.interpolate_property(subList, 'rect_position',
	#Reuse initialPos to make the second menu 200 to the right of the initialPos when it tweens in
	Vector2(initialPos.x - 200, initialPos.y),
	initialPos, #End on initialPos since that's where the first menu was before.
	.5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.interpolate_property(subList, 'modulate',
	Color(0,0,0,0), Color(1,1,1,1), .5, Tween.TRANS_QUAD, Tween.EASE_OUT);
	tween2.start();
	
func input(event):
	if Input.is_action_just_pressed(\"ui_down\"):
		if selection < self.get_child_count() - 1:
			selection = selection + 1;
			highlightList(selection);
			get_node(\"../MMZSelect\").play()
			
	if Input.is_action_just_pressed(\"ui_up\"):
		if selection > 0:
			selection = selection - 1;
			highlightList(selection);
			get_node(\"../MMZSelect\").play()
	
	if Input.is_action_just_pressed(\"ui_pause\") or Input.is_action_just_pressed(\"ui_select\"):
		#get_tree().change_scene(\"res://BossSelect.tscn\");
		#get_tree().change_scene(\"res://Stages/NeedleManDemo/Stage.tscn\")
		Globals.nextStage = \"res://Stages/NeedleManDemo/Stage.tscn\"
		get_tree().change_scene(\"res://BossIntro.tscn\")
			
	if Input.is_action_just_pressed(\"ui_cancel\"):
		go_back();
"

[sub_resource type="DynamicFont" id=13]
size = 35
font_data = ExtResource( 7 )

[node name="TitleScreen" type="Node"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
visible = false
position = Vector2( 0, -2.27209 )
texture = ExtResource( 1 )
centered = false

[node name="Background" type="Polygon2D" parent="."]
position = Vector2( 0, -2.27209 )
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 0, 0, 1280, 0, 1280, 720, 0, 720 )
vertex_colors = PoolColorArray( 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 )

[node name="MMZSelect" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="MMZConfirm" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="Music" type="AudioStreamPlayer" parent="."]
autoplay = true
script = SubResource( 2 )

[node name="Tween" type="Tween" parent="."]

[node name="Tween2" type="Tween" parent="."]

[node name="ItemList" type="VBoxContainer" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 27.0
margin_top = -421.0
margin_right = 628.0
margin_bottom = 139.0
focus_mode = 2
mouse_filter = 0
custom_constants/separation = 30
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StartLabel" type="Label" parent="ItemList"]
margin_right = 601.0
margin_bottom = 52.0
custom_fonts/font = ExtResource( 5 )
text = "New Game"
uppercase = true
script = SubResource( 3 )
submenuNode = "DifficultySelect"

[node name="ContinueLabel" type="Label" parent="ItemList"]
margin_top = 82.0
margin_right = 601.0
margin_bottom = 134.0
custom_fonts/font = ExtResource( 5 )
text = "Continue"
uppercase = true
script = SubResource( 4 )
enabled = false

[node name="OptionsLabel" type="Label" parent="ItemList"]
margin_top = 164.0
margin_right = 601.0
margin_bottom = 216.0
custom_fonts/font = ExtResource( 5 )
text = "Options"
uppercase = true
script = SubResource( 5 )

[node name="JukeboxLabel" type="Label" parent="ItemList"]
margin_top = 246.0
margin_right = 601.0
margin_bottom = 298.0
custom_fonts/font = ExtResource( 5 )
text = "Jukebox"
uppercase = true
script = SubResource( 6 )

[node name="QuitLabel" type="Label" parent="ItemList"]
margin_top = 328.0
margin_right = 601.0
margin_bottom = 380.0
custom_fonts/font = ExtResource( 5 )
text = "Quit"
uppercase = true
script = SubResource( 7 )

[node name="ItemListRedone" type="Node2D" parent="."]
visible = false
script = SubResource( 8 )

[node name="StartLabel_2" parent="ItemListRedone" instance=ExtResource( 6 )]
position = Vector2( 226.321, 343.55 )
text = "New Game"
submenuNode = "DifficultySelect"

[node name="Node2D" parent="ItemListRedone" instance=ExtResource( 6 )]
position = Vector2( 759.492, 343.334 )
enabled = false
text = "Continue"

[node name="Node2D2" parent="ItemListRedone" instance=ExtResource( 6 )]
position = Vector2( 804.712, 192.6 )
text = "Options"
submenuNode = "OptionsSubmenu"

[node name="Node2D3" parent="ItemListRedone" instance=ExtResource( 6 )]
position = Vector2( 804.712, 466.936 )
text = "Jukebox"
submenuNode = "JukeboxSubmenu"

[node name="Node2D4" parent="ItemListRedone" instance=ExtResource( 6 )]
position = Vector2( 687.14, 567.928 )
text = "Quit"

[node name="Debug" type="Label" parent="."]
visible = false
margin_right = 40.0
margin_bottom = 14.0
custom_fonts/font = SubResource( 9 )
text = "Debug"

[node name="Title" type="Label" parent="."]
margin_left = 2.0
margin_top = 1.0
margin_right = 1281.0
margin_bottom = 282.0
custom_fonts/font = SubResource( 10 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 5
custom_constants/shadow_offset_y = 5
custom_constants/shadow_as_outline = 1
text = "asdf"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="OptionsSubmenu" type="GridContainer" parent="."]
margin_left = 43.0
margin_top = 732.0
margin_right = 789.0
margin_bottom = 1040.0
mouse_filter = 0
custom_constants/vseparation = 30
custom_constants/hseparation = 50
columns = 2
script = SubResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MusicVol Label" type="Label" parent="OptionsSubmenu"]
margin_right = 919.0
margin_bottom = 50.0
custom_fonts/font = ExtResource( 9 )
text = "Music Volume"
uppercase = true

[node name="MusicVol Value" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_right = 1163.0
margin_bottom = 50.0
custom_fonts/font = ExtResource( 9 )
text = "100%"
uppercase = true

[node name="SFXVol Label" type="Label" parent="OptionsSubmenu"]
margin_top = 80.0
margin_right = 919.0
margin_bottom = 130.0
custom_fonts/font = ExtResource( 9 )
text = "SFX Volume"
uppercase = true

[node name="SFXVol Value" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_top = 80.0
margin_right = 1163.0
margin_bottom = 130.0
custom_fonts/font = ExtResource( 9 )
text = "100%"
uppercase = true

[node name="Fullscreen Label" type="Label" parent="OptionsSubmenu"]
margin_top = 160.0
margin_right = 919.0
margin_bottom = 210.0
custom_fonts/font = ExtResource( 9 )
text = "Fullscreen"
uppercase = true

[node name="Fullscreen Value" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_top = 160.0
margin_right = 1163.0
margin_bottom = 210.0
custom_fonts/font = ExtResource( 9 )
text = "No"
uppercase = true

[node name="Controller Label" type="Label" parent="OptionsSubmenu"]
margin_top = 240.0
margin_right = 919.0
margin_bottom = 290.0
custom_fonts/font = ExtResource( 9 )
text = "Controller Icons"
uppercase = true

[node name="Fullscreen Value3" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_top = 240.0
margin_right = 1163.0
margin_bottom = 290.0
custom_fonts/font = ExtResource( 9 )
text = "Xbox"
uppercase = true

[node name="Fullscreen Value4" type="Label" parent="OptionsSubmenu"]
margin_top = 320.0
margin_right = 919.0
margin_bottom = 370.0
custom_fonts/font = ExtResource( 9 )
text = "Controller Vibration"
uppercase = true

[node name="Fullscreen Value5" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_top = 320.0
margin_right = 1163.0
margin_bottom = 370.0
custom_fonts/font = ExtResource( 9 )
text = "No"
uppercase = true

[node name="Audio Label" type="Label" parent="OptionsSubmenu"]
margin_top = 400.0
margin_right = 919.0
margin_bottom = 450.0
custom_fonts/font = ExtResource( 9 )
text = "Music Style"
uppercase = true

[node name="Audio Label2" type="Label" parent="OptionsSubmenu"]
margin_left = 969.0
margin_top = 400.0
margin_right = 1163.0
margin_bottom = 450.0
custom_fonts/font = ExtResource( 9 )
text = "Rock"
uppercase = true

[node name="DifficultySelect" type="VBoxContainer" parent="."]
margin_left = 1299.0
margin_top = 371.0
margin_right = 1847.0
margin_bottom = 713.0
custom_constants/separation = 30
script = SubResource( 12 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EZ" type="Label" parent="DifficultySelect"]
margin_right = 548.0
margin_bottom = 52.0
custom_fonts/font = ExtResource( 5 )
text = "Super Easy"
uppercase = true

[node name="EZ2" type="Label" parent="DifficultySelect"]
margin_top = 82.0
margin_right = 548.0
margin_bottom = 134.0
custom_fonts/font = ExtResource( 5 )
text = "Easy"
uppercase = true

[node name="EZ3" type="Label" parent="DifficultySelect"]
margin_top = 164.0
margin_right = 548.0
margin_bottom = 216.0
custom_fonts/font = ExtResource( 5 )
text = "Medium"
uppercase = true

[node name="EZ4" type="Label" parent="DifficultySelect"]
margin_top = 246.0
margin_right = 548.0
margin_bottom = 298.0
custom_fonts/font = ExtResource( 5 )
text = "Hard"
uppercase = true

[node name="EZ5" type="Label" parent="DifficultySelect"]
margin_top = 328.0
margin_right = 548.0
margin_bottom = 380.0
custom_fonts/font = ExtResource( 5 )
text = "Custom"
uppercase = true

[node name="Copyright" type="Label" parent="."]
margin_left = 200.0
margin_top = 525.0
margin_right = 1277.0
margin_bottom = 718.0
custom_fonts/font = SubResource( 13 )
text = "Proof of Concept!
Plz don't share!"
align = 2
valign = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="rpcManager" type="Node" parent="."]
