[gd_scene load_steps=5 format=2]

[ext_resource path="res://Cutscene/CutsceneMain.tscn" type="PackedScene" id=1]
[ext_resource path="res://Cutscene/Portraits/Nyto_7.png" type="Texture" id=2]
[ext_resource path="res://Cutscene/BlendAddLoop.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var reinaAudioPlayer:Globals.ReinaAudioPlayer

var cutsceneData:Dictionary

const Def = preload(\"res://stepmania-compat/StepManiaActors.gd\")
#var nightShader = load(\"res://ParticleEffects/NightShader.tres\")
const nightShader = preload(\"res://ParticleEffects/NightShader.tres\")
#const smSprite = preload(\"res://stepmania-compat/smSprite.gd\")
#const smQuad = preload(\"res://stepmania-compat/smQuad.gd\")

#func Quad(d)->smQuad:
#	var q = smQuad.new()
#	for property in d:
#		q.set(property,d[property])
#	return q

func get_cutscene_path()->String:
	match OS.get_name():
		\"Windows\",\"X11\",\"macOS\":
			if OS.has_feature(\"standalone\"):
				return OS.get_executable_path().get_base_dir()+\"/GameData/Cutscene/\"
	#If not compiled or if the platform doesn't allow writing to the game's current directory
	return \"res://Cutscene/\"
	
func load_cutscene_data(name:String)->Dictionary:
	var f = File.new()
	var path:String
	if \"/\" in name:
		path=name
	else:
		path = get_cutscene_path()+name
	var ok = f.open(path, File.READ)
	if ok != OK:
		printerr(\"Warning: could not open file for reading! ERROR \", ok)
		return Dictionary()
	return parse_json(f.get_as_text())

func _ready():
	
	#\"What the fuck\" - My buddy SheepyChris, upon seeing this unholy abomination
	var LoadBackgrounds = [
		Def.Quad({
			color=Color(0,0,0,1),
			size=Globals.gameResolution
		}),
		Def.Sprite({
			modulate=Color(1,1,1,0),
			Texture=\"SFBase\",
			cover=true
		})
	]
	
	for arg in OS.get_cmdline_args():
		print(\"Cmdline arg: \"+arg)
		if arg.find(\"=\") > -1:
			var kv = arg.split(\"=\")
			if kv[0]==\"--cutscene\":
				Globals.nextCutscene=kv[1]
				break
	#cutsceneData = load_cutscene_data(\"closeOpenBoxTest.json\")
	cutsceneData = load_cutscene_data(Globals.nextCutscene)
	#print(cutsceneData)
	reinaAudioPlayer = Globals.ReinaAudioPlayer.new(self)
	reinaAudioPlayer.load_song(cutsceneData['CDAudio'],cutsceneData['nsf_fileName'],cutsceneData['nsf_trackNum'])
	
	#var s = smSprite.new()
	#s.set_texture(load(\"res://Cutscene/Backgrounds/SFBase.png\"))
	##s.loadFromExternal(\"res://Cutscene/Backgrounds/SFs.png\")
	#s.Cover()
	#s.Center()
	#$BackgroundHolder.add_child(s)
	
	#var q = Quad({
	#	\"color\":Color(0,0,0,1)
	#})
	##print(q.color)
	#q.setSize(Globals.gameResolution)
	#q.Center()
	#$BackgroundHolder.add_child(q)
	#for actor in LoadBackgrounds:
	#	$BackgroundHolder.add_child(actor)
	#	actor.position=Globals.SCREEN_CENTER
	var bgs = cutsceneData['bg']
	for i in range(len(bgs)):
		var bgToLoad = bgs[i]
		
		var nightFilter = false
		if \",\" in bgToLoad:
			nightFilter = bgToLoad.split(\",\")[1].to_lower()==\"true\"
			bgToLoad = bgToLoad.split(\",\")[0]
		var c = Color(1,1,1,0) if i!=0 else Color(1,1,1,1)
		var s = Def.Sprite({
			modulate=c,
			Texture=bgToLoad,
			cover=true
		})
		if nightFilter:
			s.material=nightShader
		$BackgroundHolder.add_child(s)
		s.position=Globals.SCREEN_CENTER
	$CutscenePlayer.init_(cutsceneData['msg'],null,false,$BackgroundHolder)
	
	add_child(Def.Quad({
		name=\"fadeOut\",
		color=Color(0,0,0,0),
		size=Globals.gameResolution,
		position=Globals.SCREEN_CENTER
	}))
	#s.hide()


func _on_CutscenePlayer_cutscene_finished():
	var seq := TweenSequence.new(get_tree())
	seq._tween.pause_mode = Node.PAUSE_MODE_PROCESS
# warning-ignore:return_value_discarded
	seq.append($fadeOut,'color:a',1,.5).set_trans(Tween.TRANS_QUAD)
	seq.connect(\"finished\",self,\"end_cutscene_2\")
	pass # Replace with function body.

func end_cutscene_2():
	if \"next\" in cutsceneData:
		Globals.nextCutscene=cutsceneData['next']
		get_tree().reload_current_scene()
	else:
		get_tree().change_scene(\"res://TitleScreenV2.tscn\")
"

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="BackgroundHolder" type="Node2D" parent="."]

[node name="CutscenePlayer" parent="." instance=ExtResource( 1 )]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]

[node name="Sprite" type="Sprite" parent="."]
visible = false
position = Vector2( 643.722, 305.815 )
texture = ExtResource( 2 )

[node name="BlendAddLoop" parent="Sprite" instance=ExtResource( 3 )]
visible = false
position = Vector2( -2.41174, -371.331 )

[connection signal="cutscene_finished" from="CutscenePlayer" to="." method="_on_CutscenePlayer_cutscene_finished"]
