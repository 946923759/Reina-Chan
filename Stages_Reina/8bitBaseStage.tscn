[gd_scene load_steps=16 format=2]

[ext_resource path="res://Character Sprites/ump9/ump9Idle.png" type="Texture" id=1]
[ext_resource path="res://Stages/TestStage/Tileset.tres" type="TileSet" id=2]
[ext_resource path="res://Stages_Reina/8bitBaseStage.tres.gd" type="Script" id=3]
[ext_resource path="res://Stages/DebugRoomBorders.tscn" type="PackedScene" id=4]
[ext_resource path="res://Character Sprites/m16/m16Idle.png" type="Texture" id=5]
[ext_resource path="res://Various Objects/Special Blocks/EasyModeHelper.png" type="Texture" id=6]
[ext_resource path="res://Various Objects/Special Blocks/EasyModeHelper_OneWay.png" type="Texture" id=7]
[ext_resource path="res://Screens/_transition/transition.tscn" type="PackedScene" id=8]
[ext_resource path="res://ubuntu-font-family/BitmapFont.tscn" type="PackedScene" id=9]
[ext_resource path="res://Screens/ScreenTitleMenu/reina_logo.png" type="Texture" id=10]

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="TileSet" id=3]
0/name = "EasyModeHelper.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 16, 16 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 2 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0
1/name = "EasyModeHelper_OneWay.png 1"
1/texture = ExtResource( 7 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 0, 0, 16, 16 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape = SubResource( 4 )
1/shape_one_way = true
1/shape_one_way_margin = 1.0
1/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": true,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
1/z_index = 0

[sub_resource type="GDScript" id=1]
script/source = "tool
extends Sprite

#This object spawns a player as a child and then
#the base will grab the player variable.
#There isn't really any reason to have a holder for the player
#other than maybe adding multiplayer support. Which won't
#happen.

#A big thanks to the godot team for removing the ability to 
#set a size of Node2Ds in Godot 3.X, making me do this so I
#can drag around the player sprite!

#Honestly there is probably a better way to do this than
#using a Node2D or a sprite

#,\"Shin M16\"
export (int,\"UMP9\",\"M16A1\",\"UMP9 (Playback Recorder)\") var player_to_spawn_in_debug=0 setget update_sprite_editor
export (Array,Texture) var charTextures
var player:KinematicBody2D
var currentCharacter:int=0

func update_sprite_editor(new_value):
	player_to_spawn_in_debug=new_value
	if charTextures.size()>new_value:
		self.texture=charTextures[new_value]

#func _process(delta):
#	update_sprite_editor(player_to_spawn_in_debug)
#Godot doesn't set exported variables until _ready() so
#this does not work
#func _init():
#	pass

func _ready():
	if Engine.editor_hint:
		return
	currentCharacter = Globals.playerData.currentCharacter
	if OS.is_debug_build() and currentCharacter==0:
		currentCharacter = player_to_spawn_in_debug

	#TODO: WHY IS THIS HERE??????
	Globals.playCutscenes=Globals.OPTIONS['playCutscenes']['value']
		
	var n:Resource
	if currentCharacter==0:
		n=load(\"res://Player Files/8bitPlayer/UMP9.tscn\")
	elif currentCharacter==1:
		n=load(\"res://Player Files/8bitPlayer/M16.tscn\")
	elif currentCharacter==2:
		n=load(\"res://Player Files/8bitPlayer/Replayer.tscn\")
	player = n.instance()
	#print(self.position)
	var tempPos = self.position
	#print(tempPos)
	self.position=Vector2(0,0)
	player.position=tempPos
	self.scale=Vector2(1,1)
	add_child(player)
	self.texture=null
"

[sub_resource type="GDScript" id=5]
script/source = "extends CanvasLayer

func _ready():
	if Globals.previous_screen == \"ScreenTitleMenu\" or Globals.previous_screen == \"ScreenTitleJoin\":
		visible=true
		pass
	else:
		queue_free()
		pass

var time:float = 0.0
func _process(delta):
	time+=delta
	if time>1.0:
		time-=1
	$BitmapFont.visible = time>.5
	
	if Input.is_action_just_pressed(\"ui_pause\"):
		set_process(false)
		$BitmapFont.visible=false
		$ColorRect.color.a=0.0
		var t = create_tween()
		t.tween_property($ColorRect,\"visible\",true,0.0)
		t.tween_property($ColorRect,\"color\",Color.black,1.0)
		Globals.previous_screen=\"ScreenDemo\"
		t.tween_callback(Globals,\"change_screen\",[get_tree(),\"ScreenTitleMenu\"])
"

[node name="Node2D" type="Node2D"]
script = ExtResource( 3 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
pause_mode = 2
bus = "Music"

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2( 4, 4 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 16, 16 )
show_collision = true
collision_layer = 16
collision_mask = 35
format = 1
__meta__ = {
"_edit_lock_": true
}

[node name="EasyTiles" type="TileMap" parent="."]
scale = Vector2( 4, 4 )
tile_set = SubResource( 3 )
cell_size = Vector2( 16, 16 )
collision_layer = 16
collision_mask = 33
format = 1
__meta__ = {
"_edit_lock_": true
}

[node name="DebugRoomBorders" parent="." instance=ExtResource( 4 )]
__meta__ = {
"_edit_lock_": true
}

[node name="PlayerHolder" type="Sprite" parent="."]
scale = Vector2( 4, 4 )
texture = ExtResource( 1 )
centered = false
region_enabled = true
region_rect = Rect2( 0, 0, 26, 32 )
script = SubResource( 1 )
charTextures = [ ExtResource( 1 ), ExtResource( 5 ), ExtResource( 1 ) ]

[node name="DebugWarpPoints" type="Node" parent="."]

[node name="Demo" type="CanvasLayer" parent="."]
script = SubResource( 5 )

[node name="BitmapFont" parent="Demo" instance=ExtResource( 9 )]
position = Vector2( 640, 352 )
text = "press start"
wrap_at = 500
scale_by = 4
alignment = 1

[node name="BitmapFont2" parent="Demo" instance=ExtResource( 9 )]
position = Vector2( 64, 664 )
text = "demonstration"
wrap_at = 500
scale_by = 4

[node name="Sprite" type="Sprite" parent="Demo"]
position = Vector2( 968, 632 )
scale = Vector2( 2, 2 )
texture = ExtResource( 10 )

[node name="ColorRect" type="ColorRect" parent="Demo"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
visible = false

[node name="TransitionIn" parent="CanvasLayer" instance=ExtResource( 8 )]
transition_type = 1

[connection signal="ready" from="." to="CanvasLayer/TransitionIn" method="OffCommand"]
