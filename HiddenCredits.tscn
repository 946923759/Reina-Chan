[gd_scene load_steps=6 format=2]

[ext_resource path="res://init.png" type="Texture" id=1]

[sub_resource type="GDScript" id=4]
script/source = "extends Node2D

var font = load(\"res://Cutscene/TextFont.tres\")

func BitmapText(d)->Label:
	var l = Label.new()
	for property in d:
		l.set(property,d[property])
	l.set(\"custom_fonts/font\",font)
	#l.add_to_group(\"Translatable\")
	return l"

[sub_resource type="Shader" id=1]
code = "
shader_type canvas_item;

float grid(vec2 uv, float velocity, float iTime)
{
    vec2 size = vec2(uv.y, uv.y * uv.y * 0.2) * 0.01;
    uv += vec2(0.0, iTime * 4.0 * (velocity + 0.05));
    uv = abs(fract(uv) - 0.5);
 	vec2 lines = smoothstep(size, vec2(0.0), uv);
 	lines += smoothstep(size * 5.0, vec2(0.0), uv) * 0.4 * velocity;
    return clamp(lines.x + lines.y, 0.0, 3.0);
}


void fragment()
{
    vec2 uv = (2.0 * FRAGCOORD.xy.xy - (1.0 / SCREEN_PIXEL_SIZE).xy)/(1.0 / SCREEN_PIXEL_SIZE).y;
    float velocity = 1.0;
   
    {
        // Grid
        vec3 col = vec3(0.0, 0.1, 0.2);
        if (uv.y < -0.2)
        {
            uv.y = 3.0 / (abs(uv.y + 0.2) + 0.05);
            uv.x *= uv.y * 1.0;
            float gridVal = grid(uv, velocity, TIME);
            col = mix(col, vec3(1.0, 0.5, 1.0), gridVal);
        }
        else
        {
            uv.y -= velocity * 1.1 - 0.51;
        }

        col = mix(vec3(col.r, col.r, col.r) * 0.3, col, velocity * 0.5);

        COLOR = vec4(col,1.0);
    }
      
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="StyleBoxLine" id=3]

[node name="Spatial" type="Node2D"]
script = SubResource( 4 )

[node name="init" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 640, 360 )
texture = ExtResource( 1 )

[node name="Label" type="Label" parent="."]
margin_right = 40.0
margin_bottom = 14.0
custom_styles/normal = SubResource( 3 )
text = "Hello world"
__meta__ = {
"_edit_use_anchors_": false
}
