[gd_scene load_steps=6 format=2]

[ext_resource path="res://Stages_Reina/Alchemist/cv2.png" type="Texture" id=1]
[ext_resource path="res://Sounds/Classic/EnemyDamage.wav" type="AudioStream" id=2]
[ext_resource path="res://ParticleEffects/GlowShader.tres" type="Material" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends StaticBody2D
signal block_broken()

export(PackedScene) var drop_on_break
export(int, FLAGS, 
	\"Buster\",
	\"Architect\",
	\"Alchemist\",
	\"Ouroboros\",
	\"Scarecrow\",
	\"???\",
	\"???\",
	\"???\",
	\"???\",
	\"Glorylight\",
	\"Grenade\") var weaponCanBreak=2047 #Use a calculator in programmer mode for this number
export(bool) var despawn_on_break = true
export(int, 1, 50) var maxHealth = 3
export(Texture) var textureOverride
var curHealth;

var isAlive = true

onready var sprite:Sprite = $Sprite
onready var hurtSound:AudioStreamPlayer2D = $HurtSound

var explosion = preload(\"res://Stages/EnemyExplodeSmall.tscn\")


var last_collision_bit:int = 0
func _ready():
	last_collision_bit=collision_layer
	if textureOverride:
		$Sprite.texture=textureOverride
		
	curHealth = maxHealth
	set_physics_process(true);

func enable():
	self.visible=true
	collision_layer=last_collision_bit
	collision_mask=last_collision_bit
	curHealth=maxHealth
	isAlive=true
	set_physics_process(true);
	
func disable():
	#self.visible=false
	collision_layer=0
	collision_mask=0
	#set_physics_process(false)



func objectTouched(obj):
	if obj.has_method(\"enemy_touched\"): #If enemy touched bullet
		obj.call(\"enemy_touched\",self)
		

var whiteTime = 0
func _physics_process(delta):
	if !sprite.use_parent_material:
		whiteTime += delta
		if whiteTime > .1:
			sprite.use_parent_material = true

func damage(amount,type:int=0):
	#print(type)
	#print(weaponCanBreak)
	if !(weaponCanBreak & 1<<type):
		return
	curHealth -= amount
	if curHealth <= 0:
		if isAlive:
			killSelf()
	else:
		#set false so the white tint shader will show up.
		hurtSound.play()
		sprite.use_parent_material = false
		whiteTime = 0

func killSelf():
	#print(self.name+\" queued to be killed.\")
	isAlive = false
	set_physics_process(false)
	visible = false
	
	var e = explosion.instance()
	e.init(true)
	e.position = position
	#e.position.y-=32
	get_parent().add_child(e)
	
	emit_signal(\"block_broken\")
	if drop_on_break!=null:
		var f = drop_on_break.instance()
		f.global_position = global_position
		get_parent().add_child(f)
	
	if despawn_on_break:
		#print(\"Despawning\")
		self.queue_free()
	else:
		disable()
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 32, 32 )

[node name="BreakableBlock" type="StaticBody2D"]
collision_layer = 25
collision_mask = 25
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = ExtResource( 3 )
use_parent_material = true
scale = Vector2( 4, 4 )
z_index = -1
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="HurtSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 2 )
bus = "Player/Enemies"

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="."]
process_parent = true
physics_process_parent = true
